version: 2.1

workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
          context:
            - "github"
            - "Docker Hub"
      - test:
          requires:
            - build
          matrix:
            parameters:
              platform:
                - linux/amd64
                - linux/arm64
          context:
            - "github"
            - "Docker Hub"
      - example-build:
          requires:
            - test
          context:
            - "github"
            - "Docker Hub"
      - example-deploy:
          requires:
            - example-build
          context:
            - "github"
          filters:
            branches:
              only: main
commands:
  setup-multi-arch-docker:
    steps:
      - run:
          name: Prepare for multi arch build (setup qemu)
          command: |
            sudo apt-get update
            sudo apt-get install -y qemu-user-static binfmt-support
      - run:
          name: Check versions
          command: |
            qemu-arm-static --version
            qemu-aarch64-static --version
            update-binfmts --version 
      - run:
          name: Create multi arch docker image builder
          command: |
            docker buildx create --name multi-arch-builder
            docker buildx use multi-arch-builder
            docker buildx inspect --bootstrap

jobs:
  build:
    machine:
      image: ubuntu-2204:current
    resource_class: large
    steps:
      - setup-multi-arch-docker
      - checkout
      - run:
          name: Build docker image
          no_output_timeout: 1h
          command: |
            echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
            TAG_NAME="${DOCKER_USER}/asciidoctor"
            TAG="--tag ${TAG_NAME}:latest"
            ASCIIDOCTOR_BASE_TAG=${CIRCLE_TAG:-latest}
            if [ "${CIRCLE_TAG}" != "" ]; then
              TAG="--tag ${TAG_NAME}:${CIRCLE_TAG} --tag ${TAG_NAME}:${CIRCLE_TAG%%.*} --tag ${TAG_NAME}:${CIRCLE_TAG%.*} --tag stable"
              ASCIIDOCTOR_BASE_TAG=${CIRCLE_TAG%.*}
            fi
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              ${TAG} \
              --build-arg CIRCLE_TAG=${CIRCLE_TAG:-latest} \
              --build-arg ASCIIDOCTOR_BASE_TAG=${ASCIIDOCTOR_BASE_TAG} \
              --build-arg BUILDKIT_MULTI_PLATFORM=1 \
              --no-cache \
              --progress=plain \
              --push .
  test:
    parameters:
      platform:
        type: enum
        enum: ["linux/amd64", "linux/arm64"]
    docker:
      - image: ${DOCKER_USER}/asciidoctor:${CIRCLE_TAG:-latest}
    resource_class: medium
    steps:
      - run:
          name: Test docker image (<< parameters.platform >>)
          no_output_timeout: 1h
          command: |
            echo "${DOCKER_USER}/asciidoctor:${CIRCLE_TAG:-latest}"
            mkdir -p /documents/doc
            asciidoctor --version
            inliner --help
  example-build:
    docker:
      - image: cimg/base:current
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Delete and create dist directory
          command: |
            ls -al $(pwd)
            rm -rf .examples
            mkdir -p .examples/dist/css
      - run:
          name: Pull docker image
          command: |
            echo "${DOCKER_USER}/asciidoctor:${CIRCLE_TAG:-latest}"
            echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
            docker pull ${DOCKER_USER}/asciidoctor:${CIRCLE_TAG:-latest}
            docker run --init --rm \
              -v $(pwd)/src/doc:/documents \
              -v $(pwd)/.examples/dist:/dist \
              ${DOCKER_USER}/asciidoctor:${CIRCLE_TAG:-latest} \
                sh -c "asciidoctor --version && ls -al /documents/"
      - run:
          name: Generate HTML
          no_output_timeout: 1h
          command: |
            echo "${DOCKER_USER}/asciidoctor:${CIRCLE_TAG:-latest}"
            docker run --init --rm \
              -v $(pwd)/src/doc:/documents \
              -v $(pwd)/.examples/dist:/dist \
              ${DOCKER_USER}/asciidoctor:${CIRCLE_TAG:-latest} \
                asciidoctor \
                  --trace \
                  --verbose \
                  -b html5 \
                  -D "/dist" \
                  -r asciidoctor-diagram \
                  -r asciidoctor-mathematical \
                  -r /usr/local/asciidoctor-extensions/lib/glob-include-processor.rb \
                  -a projectVersion="${CIRCLE_TAG:-${CIRCLE_SHA1:0:8}}" \
                  -a revisionDate="${REVISION_DATE}" \
                  /documents/asciidoctor-diagram_overview.adoc
      - run:
          name: Inline HTML
          no_output_timeout: 1h
          command: |
            docker run --init --rm \
              -v $(pwd)/.examples/dist:/dist \
              -it \
              ${DOCKER_USER}/asciidoctor:${CIRCLE_TAG:-latest} \
                inliner \
                  --nocompress \
                  --preserve-comments \
                  --inlinemin \
                  --videos \
                  /dist/asciidoctor-diagram_overview.html \
                  2>/dev/null \
                  1> .examples/dist/asciidoctor-diagram_overview_inlined.html
      - run:
          name: Generate PDF
          no_output_timeout: 1h
          command: |
            docker run --init --rm \
              -v $(pwd)/src/doc:/documents/ \
              -v $(pwd)/.examples/dist:/dist \
              ${DOCKER_USER}/asciidoctor:${CIRCLE_TAG:-latest} \
                asciidoctor-pdf \
                  --trace \
                  --verbose \
                  -D "/dist" \
                  -r asciidoctor-diagram \
                  -r asciidoctor-mathematical \
                  -r /usr/local/asciidoctor-extensions/lib/glob-include-processor.rb \
                  -a projectVersion="${CIRCLE_TAG:-${CIRCLE_SHA1:0:8}}" \
                  -a revisionDate="${REVISION_DATE}" \
                  /documents/asciidoctor-diagram_overview.adoc
      - run:
          name: Generate index.html
          no_output_timeout: 1h
          command: |
            docker run --init --rm \
              -v $(pwd)/src/doc:/documents/ \
              -v $(pwd)/.examples/dist:/dist \
              ${DOCKER_USER}/asciidoctor:${CIRCLE_TAG:-latest} \
                asciidoctor \
                  --trace \
                  --verbose \
                  -b html5 \
                  -D "/dist" \
                  -r asciidoctor-diagram \
                  -r asciidoctor-mathematical \
                  -r /usr/local/asciidoctor-extensions/lib/glob-include-processor.rb \
                  -a projectVersion="${CIRCLE_TAG:-${CIRCLE_SHA1:0:8}}" \
                  -a revisionDate="${REVISION_DATE}" \
                  /documents/index.adoc
      - persist_to_workspace:
          root: .examples
          paths: ["dist"]
  example-deploy:
    docker:
      - image: node:lts
    steps:
      - setup_remote_docker
      - checkout
      - attach_workspace:
          at: .examples
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@5.0.0
            git config user.email "circle-ci@users.noreply.github.com"
            git config user.name "circle-ci"
      - add_ssh_keys:
          fingerprints:
            - "44:0d:4e:92:0b:49:7d:99:c0:ad:c3:6b:f4:d4:db:67"
      - run:
          name: Deploy example to gh-pages branch
          command: |
            gh-pages \
            --message "[skip ci] Updated by ${CIRCLE_BUILD_URL}" \
            -d .examples/dist
          environment:
            CACHE_DIR: /tmp
            NODE_DEBUG: gh-pages